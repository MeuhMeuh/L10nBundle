{"name":"L10nbundle","tagline":"","body":"L10nBundle\r\n==========\r\n\r\n[![Build Status](https://travis-ci.org/lafourchette/L10nBundle.svg?branch=master)](https://travis-ci.org/lafourchette/L10nBundle) [![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/lafourchette/L10nBundle/badges/quality-score.png?s=77af0dc7eed34c47d0b264469ab2031c21d6f968)](https://scrutinizer-ci.com/g/lafourchette/L10nBundle/) [![Code Coverage](https://scrutinizer-ci.com/g/lafourchette/L10nBundle/badges/coverage.png?s=d6df93262b412bb71ecb7fd1365077ad919e660a)](https://scrutinizer-ci.com/g/lafourchette/L10nBundle/)\r\n\r\nOverview\r\n--------\r\n\r\nThe aim of L10nBundle is to provide a very simple way to deal with L10N, like I18N with [Symfony translator](http://symfony.com/doc/current/components/translation/usage.html \"Using the Translator\").\r\n\r\nL10N data can be store wherever you want.\r\nCurrently, L10nBundle supports YaML file and MongoDb.\r\n\r\n\r\nConfiguration\r\n-------------\r\n\r\n### Global\r\n    l10n:\r\n        localization_fallback: en # Fallback localization, used when no explicit Localization is asked or localization not found. Value may be string or integer\r\n        locale_fallback: en_US # Fallback locale, to manage L10N values\r\n        manager: yaml # The name of the manager you want to use currently yaml or mongodb\r\n\r\nYou can use the parameters of your symfony configuration in your values.\r\nExample:\r\n\r\n    #parameters.yml\r\n    parameters:\r\n        my_environment_extension: local\r\n\r\n    #l10n.yml\r\n    l10n:\r\n        my_url:\r\n            gb: www.domain.%my_environment_extension%\r\n\r\nThe value will be resolved like this:\r\n\r\n    my_url => www.domain.local\r\n\r\n### yaml\r\n    yaml:\r\n        data_file: /path/to/main.yaml\r\n\r\n#### You can import files\r\n\r\n    imports:\r\n        - { resource: \"../../src/Bundle/MyBundle/Resources/translations/l10n.yml\" }\r\n\r\n#### Configuration is under l10n key\r\n\r\n    l10n:\r\n        registration:\r\n            label:\r\n                fr: FRA\r\n                es: SPA\r\n            name:\r\n                fr: french name\r\n                es: spanish name\r\n\r\nYou can use the keys `registration.label` and `registration.name`.\r\n\r\n#### Simple translation is provided\r\nUse an array as value:\r\n\r\n    l10n:\r\n        registration.label:\r\n            fr:\r\n                - {locale: fr, value: FRA_fr}\r\n                - {locale: en, value: FRA_en}\r\n\r\n### mongodb\r\n    mongodb:\r\n        host: 127.0.0.1\r\n        port: 27017\r\n        username: test\r\n        password: T3$t\r\n        database: test_db\r\n        \r\n    \r\nUsage\r\n-----\r\n\r\nExample in a controler\r\n\r\n    $l10n = $this->getContainer()->get('l10n_bundle.business.l10n_provider');\r\n    $l10n->getL10n('key', 'idLoc');\r\n\r\nIn a twig template you can use the l10n filter\r\n\r\n    {{ 'key'|l10n }}\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}